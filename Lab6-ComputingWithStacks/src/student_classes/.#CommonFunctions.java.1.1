package student_classes;
import java.util.Stack;

/*
 * You must implement the following methods using Java's Stack object to 
 * replace the iteration/recursion in the original functions with a series
 * of stack operations, including push, pop, peek and isEmpty. Use no other
 * special library functions or classes; in other words, your code should use
 * standard arithmetic operators and in the case of the reverse function, only
 * push and pop and the default constructor for whichever Java collection
 * class you choose to represent lists.
 */

public class CommonFunctions {
	/**
	 * Your documentation here
	 * @param n
	 * @return
	 */
	public static int factorial( int n ) {
		throw new UnsupportedOperationException("you must implement this method" );
	}
	/**
	 * Your documentation here
	 * @param n
	 * @return
	 */
	public static int fibonacci( int n ) {
		throw new UnsupportedOperationException("you must implement this method" );
	}
	/**
	 * Your documentation here
	 * @param theStack
	 * @return
	 */
	public static <T extends Comparable< T> > T min( Stack< T > theStack ) {
		throw new UnsupportedOperationException("you must implement this method" );
	}
	/**
	 * Your documentation goes here
	 * @param text
	 * @return
	 */
	public static boolean isBalanced( String text ) {
		throw new UnsupportedOperationException("you must implement this method" );
	}
	
	/**
	 * 
	 * Your documentation here
	 * @param str
	 * @return
	 */
	public static boolean isPalindrome( String str ) {
		throw new UnsupportedOperationException("you must implement this method" );
	}
}
